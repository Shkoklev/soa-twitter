version: "2.1"
services:

  kong-database:
    image: postgres:latest
    container_name: kong-database
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_DB=kong
    ports:
    - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - soa-twitter

  kong-migrations:
    image: kong:latest
    container_name: kong-migrations
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr 
    links:
      - kong-database
    restart: on-failure
    networks:
      - soa-twitter

  kong:
    image: kong:latest
    container_name: kong
    restart: always
    depends_on:
      kong-database:
        condition: service_healthy
    links:
      - kong-database:kong-database 
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_DNS_RESOLVER=10.3.0.15:8600
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr 
    networks:
      - soa-twitter

  consul:
    image: consul:latest
    container_name: consul
    ports:
      - '8300:8300'
      - '8301:8301'
      - '8301:8301/udp'
      - '8500:8500'
      - '8600:8600'
      - '8600:8600/udp'
    networks:
      soa-twitter:
        ipv4_address: 10.3.0.15

  tweets:
    build: ./tweets
    container_name: microservice_tweets
    command: gunicorn --workers=1 -b :10001 app:app
    ports:
      - 10001:10001
    environment:
      - CONSUL_HOST=10.3.0.15
      - CONSUL_PORT=8500
    networks:
      - soa-twitter

  users:
    build: ./users
    container_name: microservice_users
    command: gunicorn --workers=1 -b :10002 app:app
    ports:
      - 10002:10002
    environment:
      - CONSUL_HOST=10.3.0.15
      - CONSUL_PORT=8500
    networks:
      - soa-twitter

  follows:
    build: ./follows
    container_name: microservice_follows
    command: gunicorn --workers=1 -b :10003 app:app
    ports:
      - 10003:10003
    environment:
      - CONSUL_HOST=10.3.0.15
      - CONSUL_PORT=8500
    networks:
      - soa-twitter

  favorites:
    build: ./favorites
    container_name: microservice_favorites
    command: gunicorn --workers=1 -b :10004 app:app
    ports:
      - 10004:10004
    environment:
      - CONSUL_HOST=10.3.0.15
      - CONSUL_PORT=8500
    networks:
      - soa-twitter

networks:
  soa-twitter:
    driver: bridge
    ipam:
     config:
       - subnet: 10.3.0.0/16
         gateway: 10.3.0.1